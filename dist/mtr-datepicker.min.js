function MtrDatepicker(a) {
    function b(a) {
        return document.getElementById(a);
    }
    function c(a, b) {
        return a.querySelector(b);
    }
    function d(a, b) {
        return b.offsetTop - a.offsetTop;
    }
    function e(a) {
        return document.createElement(a);
    }
    function f(a) {
        var b;
        if (null == a || "object" != typeof a) return a;
        if (a instanceof Array) {
            b = [];
            for (var c = 0, d = a.length; d > c; c++) b[c] = f(a[c]);
            return b;
        }
        if (a instanceof Object) {
            b = {};
            for (var e in a) a.hasOwnProperty(e) && (b[e] = f(a[e]));
            return b;
        }
        throw new Error("Unable to copy obj! Its type isn't supported.");
    }
    function g(a) {
        for (var b = a.min, c = a.max, d = a.step, e = [], f = b; c >= f; f += d) e.push(f);
        return e;
    }
    function h(a, b) {
        for (var c, d = new Date(b, a, 1), e = new Date(b, a + 1, 0), f = {
            values: [],
            names: []
        }, g = d.getDate(); g <= e.getDate(); g++) c = new Date(b, a, g), f.values.push(g), 
        f.names[g] = j.daysNames[c.getDay()];
        return f;
    }
    var i, j = {
        targetElement: null,
        defaultValues: {
            hours: [],
            minutes: [],
            dates: [],
            datesNames: [],
            months: [],
            years: []
        },
        hours: {
            min: 1,
            max: 12,
            step: 1
        },
        minutes: {
            min: 0,
            max: 55,
            step: 5
        },
        months: {
            min: 0,
            max: 11,
            step: 1
        },
        years: {
            min: 2e3,
            max: 2020,
            step: 1
        },
        animations: !0,
        transitionDelay: 100,
        references: {
            hours: null
        },
        monthsNames: {
            0: "Jan",
            1: "Feb",
            2: "Mar",
            3: "Apr",
            4: "May",
            5: "Jun",
            6: "Jul",
            7: "Aug",
            8: "Sep",
            9: "Oct",
            10: "Nov",
            11: "Dec"
        },
        daysNames: {
            0: "Sun",
            1: "Mon",
            2: "Tue",
            3: "Wed",
            4: "Thu",
            5: "Fri",
            6: "Sat"
        }
    }, k = {
        date: null,
        timestamp: null,
        ampm: !0
    }, l = {
        all: [],
        time: [],
        date: [],
        hour: [],
        minute: [],
        ampm: [],
        day: [],
        month: [],
        year: []
    }, m = {
        onChange: f(l),
        beforeChange: f(l),
        afterChange: f(l)
    }, n = function(a) {
        o(a), i = b(j.targetElement), i.className += "mtr-datepicker", k.date = new Date(), 
        k.timestamp = k.date.getTime(), p(), q();
    }, o = function(a) {
        j.targetElement = a.target, j.animations = void 0 !== a.animations ? a.animations : j.animations, 
        j.defaultValues.hours = g(j.hours), j.defaultValues.minutes = g(j.minutes), j.defaultValues.months = g(j.months), 
        j.defaultValues.years = g(j.years);
    }, p = function(a, b) {
        a = void 0 !== a ? a : G(), b = void 0 !== b ? b : I();
        var c = h(a, b);
        j.defaultValues.dates = c.values, j.defaultValues.datesNames = c.names;
    }, q = function() {
        var a = r({
            name: "hours",
            values: j.defaultValues.hours,
            value: x()
        }), b = r({
            name: "minutes",
            values: j.defaultValues.minutes,
            value: z()
        }), c = s({
            name: "ampm"
        }), d = e("div");
        d.className = "mtr-row";
        var f = e("div");
        f.className = "mtr-clearfix", d.appendChild(a), d.appendChild(b), d.appendChild(c), 
        i.appendChild(d), i.appendChild(f);
        var g = r({
            name: "months",
            values: j.defaultValues.months,
            valuesNames: j.monthsNames,
            value: G()
        }), h = r({
            name: "dates",
            values: j.defaultValues.dates,
            valuesNames: j.defaultValues.datesNames,
            value: E()
        }), l = r({
            name: "years",
            values: j.defaultValues.years,
            value: I()
        }), m = e("div");
        m.className = "mtr-row";
        var n = e("div");
        n.className = "mtr-clearfix", m.appendChild(g), m.appendChild(h), m.appendChild(l), 
        i.appendChild(m), i.appendChild(n), L(k.timestamp);
    }, r = function(a) {
        function b() {
            var b = document.createElement("div");
            return b.className = "arrow up", b.innerHTML = "Up", b.addEventListener("click", function(b) {
                var c, d = a.name;
                switch (d) {
                  case "hours":
                    c = x();
                    break;

                  case "minutes":
                    c = z();
                    break;

                  case "dates":
                    c = E();
                    break;

                  case "months":
                    c = G();
                    break;

                  case "years":
                    c = I();
                }
                var e = j.defaultValues[d].indexOf(c);
                switch (e--, 0 > e && (e = j.defaultValues[d].length - 1), d) {
                  case "hours":
                    var f = j.defaultValues[d][e];
                    C() && 12 !== f && (f += 12), w(f);
                    break;

                  case "minutes":
                    y(j.defaultValues[d][e]);
                    break;

                  case "dates":
                    D(j.defaultValues[d][e]);
                    break;

                  case "months":
                    F(j.defaultValues[d][e]);
                    break;

                  case "years":
                    H(j.defaultValues[d][e]);
                }
            }, !1), b;
        }
        function c() {
            var b = document.createElement("div");
            return b.className = "arrow down", b.innerHTML = "Down", b.addEventListener("click", function() {
                var b = a.name;
                switch (b) {
                  case "hours":
                    currentValue = x();
                    break;

                  case "minutes":
                    currentValue = z();
                    break;

                  case "dates":
                    currentValue = E();
                    break;

                  case "months":
                    currentValue = G();
                    break;

                  case "years":
                    currentValue = I();
                }
                var c = j.defaultValues[b].indexOf(currentValue);
                switch (c++, c >= j.defaultValues[b].length && (c = 0), b) {
                  case "hours":
                    var d = j.defaultValues[b][c];
                    C() && 12 !== d && (d += 12), w(d);
                    break;

                  case "minutes":
                    y(j.defaultValues[b][c]);
                    break;

                  case "dates":
                    D(j.defaultValues[b][c]);
                    break;

                  case "months":
                    F(j.defaultValues[b][c]);
                    break;

                  case "years":
                    H(j.defaultValues[b][c]);
                }
            }, !1), b;
        }
        function d() {
            var b = document.createElement("input");
            return b.value = a.value, b.className = "input", b.style.display = "none", b.addEventListener("blur", function() {
                var c = b.value;
                switch (a.name) {
                  case "hours":
                    w(c);
                    break;

                  case "minutes":
                    y(c);
                    break;

                  case "dates":
                    D(c);
                    break;

                  case "months":
                    F(c);
                    break;

                  case "years":
                    H(c);
                }
            }, !1), b;
        }
        function f() {
            var b = t(a);
            return b;
        }
        var g = e("div");
        g.className = "mtr-input-slider", j.references[a.name] = j.targetElement + "-input-" + a.name, 
        g.id = j.references[a.name];
        var h = b(), i = c(), k = e("div");
        k.className = "content";
        var l = d(), m = f();
        return g.appendChild(h), k.appendChild(l), k.appendChild(m), g.appendChild(k), g.appendChild(i), 
        g;
    }, s = function(a) {
        function b(a, b, c) {
            var d = document.createElement("div"), e = document.createElement("label"), f = document.createElement("input");
            return e.innerHTML = c, f.className = "input", f.type = "radio", f.name = a, f.value = b, 
            d.appendChild(e), e.appendChild(f), f.addEventListener("change", function() {
                A(b);
            }, !1), d;
        }
        var c = document.createElement("div");
        c.className = "mtr-input-radio", j.references[a.name] = j.targetElement + "-input-" + a.name, 
        c.id = j.references[a.name];
        var d = document.createElement("form");
        d.name = j.references[a.name];
        var e = b("ampm", 1, "AM"), f = b("ampm", 0, "PM");
        return d.appendChild(e), d.appendChild(f), d.ampm.value = k.am ? "1" : "0", c.appendChild(d), 
        c;
    }, t = function(a) {
        var b = e("div");
        return b.className = "values", a.values.forEach(function(c) {
            var d = "months" === a.name ? c + 1 : c, f = e("div");
            f.className = "default-value-holder", f.setAttribute("data-value", c);
            var g = e("div");
            if (g.className = "default-value", g.innerHTML = d, g.setAttribute("data-value", c), 
            f.appendChild(g), a.valuesNames) {
                var h = e("div");
                h.className = "default-value-name", h.innerHTML = a.valuesNames[c], g.className += " has-name", 
                f.appendChild(h);
            }
            b.appendChild(f);
        }), b.addEventListener("click", function() {
            inputValue.style.display = "block", inputValue.focus();
        }, !1), b.addEventListener("wheel", function(a) {
            console.log(a);
            var b = a.target;
            console.log(b);
            var d = b.parentElement.parentElement.parentElement;
            console.log(d);
            var e, f = a.wheelDeltaY;
            return e = f > 0 ? c(d, ".arrow.up") : c(d, ".arrow.down"), e.click(), a.preventDefault(), 
            !1;
        }, !1), b;
    }, u = function(a, d) {
        var e = b(a), f = c(e, ".content"), g = c(f, ".values");
        g.remove();
        var h = t({
            name: d.name,
            values: d.values,
            valuesNames: d.valuesNames
        });
        f.appendChild(h);
    }, v = function(a, b) {
        a = void 0 !== a ? a : G(), b = void 0 !== b ? b : I(), p(a, b), u(j.references.dates, {
            name: "dates",
            values: j.defaultValues.dates,
            valuesNames: j.defaultValues.datesNames
        });
        var c = j.defaultValues.dates[j.defaultValues.dates.length - 1], d = E();
        d > c && D(c);
    }, w = function(a, b) {
        N("hour", "beforeChange");
        var c = B();
        k.timestamp = k.date.setHours(a), 12 === a && c ? k.timestamp = k.date.setHours(0) : k.timestamp = k.date.setHours(a), 
        a > 12 && (a -= 12, A(!1)), M(j.references.hours, a, b), N("hour", "onChange"), 
        N("hour", "afterChange");
    }, x = function() {
        var a = k.date.getHours(), b = B();
        return 12 === a || 0 === a ? 12 : 12 > a && b ? a : a - 12;
    }, y = function(a, b) {
        N("minute", "beforeChange");
        j.defaultValues.minutes;
        k.timestamp = k.date.setMinutes(a), M(j.references.minutes, a, b), N("minute", "onChange"), 
        N("minute", "afterChange");
    }, z = function() {
        return k.date.getMinutes();
    }, A = function(a) {
        N("ampm", "beforeChange");
        var d = k.date.getHours(), e = (x(), k.ampm);
        e !== a && (1 == a && d > 12 ? (d -= 12, k.timestamp = k.date.setHours(d)) : 0 == a && 12 >= d && (d += 12, 
        k.timestamp = k.date.setHours(d))), k.ampm = a;
        var f = b(j.references.ampm), g = c(f, "form");
        g.ampm.value = a ? "1" : "0", N("ampm", "onChange"), N("ampm", "afterChange");
    }, B = function() {
        return k.date.toLocaleTimeString().indexOf("AM") > -1 ? 1 : 0;
    }, C = function() {
        return !B();
    }, D = function(a, b) {
        N("day", "beforeChange"), k.timestamp = k.date.setDate(a), M(j.references.dates, a, b), 
        N("day", "onChange"), N("day", "afterChange");
    }, E = function() {
        return k.date.getDate();
    }, F = function(a, b) {
        N("month", "beforeChange"), v(a), k.timestamp = k.date.setMonth(a), M(j.references.months, a, b), 
        N("month", "onChange"), N("month", "afterChange");
    }, G = function() {
        return k.date.getMonth();
    }, H = function(a, b) {
        N("year", "beforeChange"), v(void 0, a), k.timestamp = k.date.setFullYear(a), M(j.references.years, a, b), 
        N("year", "onChange"), N("year", "afterChange");
    }, I = function() {
        return k.date.getFullYear();
    }, J = function() {
        return x() + ":" + z();
    }, K = function() {
        return x() + ":" + z() + " " + (B() ? "AM" : "PM");
    }, L = function(a) {
        k.date = new Date(a), k.timestamp = a;
        var b = k.date.getHours(), c = z();
        currentDate = E(), currentMonth = G(), currentYear = I();
        for (var d = j.defaultValues.minutes, e = 0; e < d.length; e++) {
            var f, g = d[e];
            if (f = e + 1 === d.length ? d[0] : d[e + 1], c === g) break;
            if (c > g && f > c) {
                c = f;
                break;
            }
            if (c > g && c > f && e === d.length - 1) {
                c = f, b += 1;
                break;
            }
        }
        w(b), y(c), F(currentMonth), H(currentYear), D(currentDate);
    }, M = function(a, e, f) {
        var g = b(a);
        f = f || !1;
        var h = c(g, ".content"), i = c(g, '.values .default-value[data-value="' + e + '"]'), k = c(g, ".input");
        scrollTo = d(h, i), k.value = e, j.animations === !1 || f ? i.scrollIntoView() : O(h, scrollTo, j.transitionDelay);
    }, N = function(a, b) {
        switch (m[b][a].forEach(function(a) {
            a();
        }), m[b].all.forEach(function(a) {
            a();
        }), a) {
          case "hour":
          case "minute":
          case "ampm":
            m[b].time.forEach(function(a) {
                a();
            });
            break;

          case "day":
          case "month":
          case "year":
            m[b].date.forEach(function(a) {
                a();
            });
        }
    }, O = function(a, b, c) {
        if (b = Math.round(b), c = Math.round(c), 0 > c) return Promise.reject("bad duration");
        if (0 === c) return a.scrollTop = b, Promise.resolve();
        var d = Date.now(), e = d + c, f = a.scrollTop, g = b - f, h = function(a, b, c) {
            if (a >= c) return 0;
            if (c >= b) return 1;
            var d = (c - a) / (b - a);
            return d * d * (3 - 2 * d);
        };
        return new Promise(function(b, c) {
            var i = a.scrollTop, j = function() {
                if (a.scrollTop == i) {
                    var c = Date.now(), k = h(d, e, c), l = Math.round(f + g * k);
                    if (a.scrollTop = l, c >= e) return void b();
                    if (a.scrollTop === i && a.scrollTop !== l) return void b();
                    i = a.scrollTop, setTimeout(j, 0);
                }
            };
            setTimeout(j, 0);
        });
    }, P = function() {
        return k.date.toDateString();
    }, Q = function() {
        return k.date.toGMTString();
    }, R = function() {
        return k.date.toISOString();
    }, S = function() {
        return k.date.toLocaleDateString();
    }, T = function() {
        return k.date.toLocaleString();
    }, U = function() {
        return k.date.toLocaleTimeString();
    }, V = function() {
        return k.date.toString();
    }, W = function() {
        return k.date.toTimeString();
    }, X = function() {
        return k.date.toUTCString();
    }, Y = function(a, b) {
        m.onChange[a].push(b);
    }, Z = function(a, b) {
        m.beforeChange[a].push(b);
    }, $ = function(a, b) {
        m.afterChange[a].push(b);
    };
    n(a), this.init = n, this.getHours = x, this.getMinutes = z, this.getIsAm = B, this.getIsPm = C, 
    this.getTime = J, this.getDate = E, this.getMonth = G, this.getYear = I, this.getFullTime = K, 
    this.setHours = w, this.setMinutes = y, this.setAmPm = A, this.setDate = D, this.setMonth = F, 
    this.setYear = H, this.values = k, this.toDateString = P, this.toGMTString = Q, 
    this.toISOString = R, this.toLocaleDateString = S, this.toLocaleString = T, this.toLocaleTimeString = U, 
    this.toString = V, this.toTimeString = W, this.toUTCString = X, this.onChange = Y, 
    this.beforeChange = Z, this.afterChange = $;
}