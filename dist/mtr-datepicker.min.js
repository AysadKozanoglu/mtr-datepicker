function MtrDatepicker(a) {
    function b(a) {
        return document.getElementById(a);
    }
    function c(a, b) {
        return a.querySelector(b);
    }
    function d(a, b) {
        return b.offsetTop - a.offsetTop;
    }
    function e(a) {
        return document.createElement(a);
    }
    function f(a) {
        var b;
        if (null == a || "object" != typeof a) return a;
        if (a instanceof Array) {
            b = [];
            for (var c = 0, d = a.length; d > c; c++) b[c] = f(a[c]);
            return b;
        }
        if (a instanceof Object) {
            b = {};
            for (var e in a) a.hasOwnProperty(e) && (b[e] = f(a[e]));
            return b;
        }
        throw new Error("Unable to copy obj! Its type isn't supported.");
    }
    function g(a, b) {
        a.className.indexOf(b) > -1 || (a.className += " " + b);
    }
    function h(a, b) {
        -1 !== a.className.indexOf(b) && (a.className = a.className.replace(new RegExp(b, "g"), ""));
    }
    function i(a) {
        for (var b = a.min, c = a.max, d = a.step, e = [], f = b; c >= f; f += d) e.push(f);
        return e;
    }
    function j(a, b) {
        for (var c, d = new Date(b, a, 1), e = new Date(b, a + 1, 0), f = {
            values: [],
            names: [],
            min: d.getDate(),
            max: e.getDate(),
            step: 1
        }, g = d.getDate(); g <= e.getDate(); g++) c = new Date(b, a, g), f.values.push(g), 
        f.names[g] = l.daysNames[c.getDay()];
        return f;
    }
    var k, l = {
        targetElement: null,
        defaultValues: {
            hours: [],
            minutes: [],
            dates: [],
            datesNames: [],
            months: [],
            years: []
        },
        hours: {
            min: 1,
            max: 12,
            step: 1,
            maxlength: 2
        },
        minutes: {
            min: 0,
            max: 55,
            step: 5,
            maxlength: 2
        },
        months: {
            min: 0,
            max: 11,
            step: 1,
            maxlength: 2
        },
        years: {
            min: 2e3,
            max: 2020,
            step: 1,
            maxlength: 4
        },
        animations: !0,
        transitionDelay: 100,
        references: {
            hours: null
        },
        monthsNames: {
            0: "Jan",
            1: "Feb",
            2: "Mar",
            3: "Apr",
            4: "May",
            5: "Jun",
            6: "Jul",
            7: "Aug",
            8: "Sep",
            9: "Oct",
            10: "Nov",
            11: "Dec"
        },
        daysNames: {
            0: "Sun",
            1: "Mon",
            2: "Tue",
            3: "Wed",
            4: "Thu",
            5: "Fri",
            6: "Sat"
        }
    }, m = {
        date: null,
        timestamp: null,
        ampm: !0
    }, n = {
        all: [],
        time: [],
        date: [],
        hour: [],
        minute: [],
        ampm: [],
        day: [],
        month: [],
        year: []
    }, o = {
        onChange: f(n),
        beforeChange: f(n),
        afterChange: f(n)
    }, p = null, q = {}, r = function(a) {
        s(a), k = b(l.targetElement), k.className += "mtr-datepicker", m.date = new Date(), 
        m.timestamp = m.date.getTime(), t(), u();
    }, s = function(a) {
        l.targetElement = a.target, l.animations = void 0 !== a.animations ? a.animations : l.animations, 
        l.defaultValues.hours = i(l.hours), l.defaultValues.minutes = i(l.minutes), l.defaultValues.months = i(l.months), 
        l.defaultValues.years = i(l.years);
    }, t = function(a, b) {
        a = void 0 !== a ? a : M(), b = void 0 !== b ? b : O();
        var c = j(a, b);
        l.dates = {
            min: c.min,
            max: c.max,
            step: c.step,
            maxlength: 2
        }, l.defaultValues.dates = c.values, l.defaultValues.datesNames = c.names;
    }, u = function() {
        var a = v({
            name: "hours",
            values: l.defaultValues.hours,
            value: D()
        }), b = v({
            name: "minutes",
            values: l.defaultValues.minutes,
            value: F()
        }), c = w({
            name: "ampm"
        }), d = e("div");
        d.className = "mtr-row";
        var f = e("div");
        f.className = "mtr-clearfix", d.appendChild(a), d.appendChild(b), d.appendChild(c), 
        k.appendChild(d), k.appendChild(f);
        var g = v({
            name: "months",
            values: l.defaultValues.months,
            valuesNames: l.monthsNames,
            value: M()
        }), h = v({
            name: "dates",
            values: l.defaultValues.dates,
            valuesNames: l.defaultValues.datesNames,
            value: K()
        }), i = v({
            name: "years",
            values: l.defaultValues.years,
            value: O()
        }), j = e("div");
        j.className = "mtr-row";
        var n = e("div");
        n.className = "mtr-clearfix", j.appendChild(g), j.appendChild(h), j.appendChild(i), 
        k.appendChild(j), k.appendChild(n), R(m.timestamp);
    }, v = function(a) {
        function b() {
            var b = e("div");
            return b.className = "arrow up", b.innerHTML = "<span></span>", b.addEventListener("click", function() {
                c(o, ".input");
                g(o, "arrow-click"), g(n, "active"), q[a.name] && window.clearTimeout(q[a.name]), 
                q[a.name] = setTimeout(function() {
                    h(o, "arrow-click"), h(n, "active");
                }, 1e3);
                var b, d = a.name;
                switch (d) {
                  case "hours":
                    b = D();
                    break;

                  case "minutes":
                    b = F();
                    break;

                  case "dates":
                    b = K();
                    break;

                  case "months":
                    b = M();
                    break;

                  case "years":
                    b = O();
                }
                var e = l.defaultValues[d].indexOf(b);
                switch (e++, e >= l.defaultValues[d].length && (e = 0), d) {
                  case "hours":
                    var f = l.defaultValues[d][e];
                    I() && 12 !== f && (f += 12), C(f);
                    break;

                  case "minutes":
                    E(l.defaultValues[d][e]);
                    break;

                  case "dates":
                    J(l.defaultValues[d][e]);
                    break;

                  case "months":
                    L(l.defaultValues[d][e]);
                    break;

                  case "years":
                    N(l.defaultValues[d][e]);
                }
            }, !1), b;
        }
        function d() {
            var b = e("div");
            return b.className = "arrow down", b.innerHTML = "<span></span>", b.addEventListener("click", function(b) {
                c(o, ".input");
                g(o, "arrow-click"), g(n, "active"), q[a.name] && window.clearTimeout(q[a.name]), 
                q[a.name] = setTimeout(function() {
                    h(o, "arrow-click"), h(n, "active");
                }, 1e3);
                var d, e = a.name;
                switch (e) {
                  case "hours":
                    d = D();
                    break;

                  case "minutes":
                    d = F();
                    break;

                  case "dates":
                    d = K();
                    break;

                  case "months":
                    d = M();
                    break;

                  case "years":
                    d = O();
                }
                var f = l.defaultValues[e].indexOf(d);
                switch (f--, 0 > f && (f = l.defaultValues[e].length - 1), e) {
                  case "hours":
                    var i = l.defaultValues[e][f];
                    I() && 12 !== i && (i += 12), C(i);
                    break;

                  case "minutes":
                    E(l.defaultValues[e][f]);
                    break;

                  case "dates":
                    J(l.defaultValues[e][f]);
                    break;

                  case "months":
                    L(l.defaultValues[e][f]);
                    break;

                  case "years":
                    N(l.defaultValues[e][f]);
                }
            }, !1), b;
        }
        function f() {
            var b = document.createElement("input");
            return b.value = a.value, b.type = "text", b.className = "input " + a.name, b.style.display = "none", 
            b.addEventListener("blur", function(c) {
                function d() {
                    var d = b.value;
                    if (c.target.className.indexOf("arrow-click") > -1) return void h(c.target, "arrow-click");
                    if (b.className.indexOf("months") > -1 && d--, A(a.name, d) === !1) return b.value = b.getAttribute("data-old-value"), 
                    void b.focus();
                    switch (b.style.display = "none", a.name) {
                      case "hours":
                        C(d);
                        break;

                      case "minutes":
                        E(d);
                        break;

                      case "dates":
                        J(d);
                        break;

                      case "months":
                        L(d);
                        break;

                      case "years":
                        N(d);
                    }
                }
                setTimeout(d, 500);
            }, !1), b.addEventListener("wheel", function(c) {
                c.preventDefault(), c.stopPropagation();
                var d, e = (c.target, c.wheelDeltaY), f = parseInt(b.value), g = l[a.name].min, h = l[a.name].max, i = l[a.name].step;
                return "months" === a.name && (g++, h++), d = e > 0 ? h > f ? f + i : g : f > g ? f - i : h, 
                b.value = d, !1;
            }, !1), b.addEventListener("keypress", function(c) {
                var d = c.keyCode || c.which, e = [ 9, 13, 27, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 ];
                if (-1 === e.indexOf(d)) return c.preventDefault(), !1;
                switch (d) {
                  case 13:
                  case 27:
                    return b.blur(), !1;

                  case 9:
                    console.log("Tab");
                    break;

                  default:
                    if (b.value.length === l[a.name].maxlength) return c.preventDefault(), !1;
                }
            }, !1), b;
        }
        function i() {
            var b = x(a);
            return b;
        }
        var j = e("div");
        j.className = "mtr-input-slider", l.references[a.name] = l.targetElement + "-input-" + a.name, 
        j.id = l.references[a.name];
        var k = b(), m = d(), n = e("div");
        n.className = "content";
        var o = f(), p = i();
        return j.appendChild(k), n.appendChild(o), n.appendChild(p), j.appendChild(n), j.appendChild(m), 
        j;
    }, w = function(a) {
        function b(a, b, c) {
            var d = document.createElement("div"), e = document.createElement("label"), f = document.createElement("input"), g = l.targetElement + "-radio-" + a + "-" + c;
            return e.innerHTML = '<span class="value">' + c + '</span><span class="radio"></span>', 
            e.setAttribute("for", g), f.className = "input ", f.type = "radio", f.name = a, 
            f.id = g, f.value = b, d.appendChild(f), d.appendChild(e), f.addEventListener("change", function() {
                G(b);
            }, !1), d;
        }
        var c = document.createElement("div");
        c.className = "mtr-input-radio", l.references[a.name] = l.targetElement + "-input-" + a.name, 
        c.id = l.references[a.name];
        var d = document.createElement("form");
        d.name = l.references[a.name];
        var e = b("ampm", 1, "AM"), f = b("ampm", 0, "PM");
        return d.appendChild(e), d.appendChild(f), d.ampm.value = H() ? "1" : "0", c.appendChild(d), 
        c;
    }, x = function(a) {
        var b = e("div");
        return b.className = "values", a.values.forEach(function(c) {
            var d = "months" === a.name ? c + 1 : c, f = e("div");
            f.className = "default-value-holder", f.setAttribute("data-value", c);
            var g = e("div");
            if (g.className = "default-value", g.innerHTML = d, g.setAttribute("data-value", c), 
            f.appendChild(g), a.valuesNames) {
                var h = e("div");
                h.className = "default-value-name", h.innerHTML = a.valuesNames[c], g.className += " has-name", 
                f.appendChild(h);
            }
            b.appendChild(f);
        }), b.addEventListener("click", function() {
            var a = b.parentElement, d = c(a, ".input");
            d.className.indexOf("months") > -1 && (d.value = parseInt(d.value) + 1), d.style.display = "block", 
            d.focus();
        }, !1), b.addEventListener("wheel", function(a) {
            if (a.preventDefault(), a.stopPropagation(), p) return !1;
            var b, d = a.target, e = d.parentElement.parentElement.parentElement.parentElement, f = (c(e, ".values"), 
            c(e, ".input"), a.wheelDeltaY);
            return b = f > 0 ? c(e, ".arrow.up") : c(e, ".arrow.down"), p = setTimeout(function() {
                B();
            }, 100), b.click(), !1;
        }, !1), b.addEventListener("touchstart", function(a) {
            return a.preventDefault(), a.stopPropagation(), !1;
        }, !1), b.addEventListener("touchmove", function(a) {
            return a.preventDefault(), a.stopPropagation(), !1;
        }, !1), b;
    }, y = function(a, d) {
        var e = b(a), f = c(e, ".content"), g = c(f, ".values");
        g.remove();
        var h = x({
            name: d.name,
            values: d.values,
            valuesNames: d.valuesNames
        });
        f.appendChild(h);
    }, z = function(a, b) {
        a = void 0 !== a ? a : M(), b = void 0 !== b ? b : O(), t(a, b), y(l.references.dates, {
            name: "dates",
            values: l.defaultValues.dates,
            valuesNames: l.defaultValues.datesNames
        });
        var c = l.defaultValues.dates[l.defaultValues.dates.length - 1], d = K();
        d > c && J(c);
    }, A = function(a, b) {
        return b = parseInt(b), l.defaultValues[a].indexOf(b) > -1 ? !0 : !1;
    }, B = function() {
        p = null;
    }, C = function(a, b) {
        T("hour", "beforeChange");
        var c = H();
        m.timestamp = m.date.setHours(a), 12 === a && c ? m.timestamp = m.date.setHours(0) : m.timestamp = m.date.setHours(a), 
        a > 12 && (a -= 12, G(!1)), S(l.references.hours, a, b), T("hour", "onChange"), 
        T("hour", "afterChange");
    }, D = function() {
        var a = m.date.getHours(), b = H();
        return 12 === a || 0 === a ? 12 : 12 > a && b ? a : a - 12;
    }, E = function(a, b) {
        T("minute", "beforeChange");
        l.defaultValues.minutes;
        m.timestamp = m.date.setMinutes(a), S(l.references.minutes, a, b), T("minute", "onChange"), 
        T("minute", "afterChange");
    }, F = function() {
        return m.date.getMinutes();
    }, G = function(a) {
        T("ampm", "beforeChange");
        var d = m.date.getHours(), e = (D(), H());
        e !== a && (1 == a && d >= 12 ? (d -= 12, m.timestamp = m.date.setHours(d)) : 0 == a && 12 > d && (d += 12, 
        m.timestamp = m.date.setHours(d))), m.ampm = a;
        var f = b(l.references.ampm), g = c(f, "form");
        g.ampm.value = a ? "1" : "0", T("ampm", "onChange"), T("ampm", "afterChange");
    }, H = function() {
        var a = m.date.getHours();
        return a >= 0 && 11 >= a ? !0 : !1;
    }, I = function() {
        return !H();
    }, J = function(a, b) {
        T("day", "beforeChange"), m.timestamp = m.date.setDate(a), S(l.references.dates, a, b), 
        T("day", "onChange"), T("day", "afterChange");
    }, K = function() {
        return m.date.getDate();
    }, L = function(a, b) {
        T("month", "beforeChange"), z(a), m.timestamp = m.date.setMonth(a), S(l.references.months, a, b), 
        T("month", "onChange"), T("month", "afterChange");
    }, M = function() {
        return m.date.getMonth();
    }, N = function(a, b) {
        T("year", "beforeChange"), z(void 0, a), m.timestamp = m.date.setFullYear(a), S(l.references.years, a, b), 
        T("year", "onChange"), T("year", "afterChange");
    }, O = function() {
        return m.date.getFullYear();
    }, P = function() {
        return D() + ":" + F();
    }, Q = function() {
        return D() + ":" + F() + " " + (H() ? "AM" : "PM");
    }, R = function(a) {
        m.date = new Date(a), m.timestamp = a;
        var b = m.date.getHours(), c = F();
        currentDate = K(), currentMonth = M(), currentYear = O();
        for (var d = l.defaultValues.minutes, e = 0; e < d.length; e++) {
            var f, g = d[e];
            if (f = e + 1 === d.length ? d[0] : d[e + 1], c === g) break;
            if (c > g && f > c) {
                c = f;
                break;
            }
            if (c > g && c > f && e === d.length - 1) {
                c = f, b += 1;
                break;
            }
        }
        C(b), E(c), L(currentMonth), N(currentYear), J(currentDate);
    }, S = function(a, e, f) {
        var g = b(a);
        f = f || !1;
        var h = c(g, ".content"), i = c(g, '.values .default-value[data-value="' + e + '"]'), j = c(g, ".arrow.up"), k = c(g, ".input");
        scrollTo = d(h, i) + j.clientHeight, k.value = e, k.setAttribute("data-old-value", e), 
        l.animations === !1 || f ? i.scrollIntoView() : U(h, scrollTo, l.transitionDelay);
    }, T = function(a, b) {
        switch (o[b][a].forEach(function(a) {
            a();
        }), o[b].all.forEach(function(a) {
            a();
        }), a) {
          case "hour":
          case "minute":
          case "ampm":
            o[b].time.forEach(function(a) {
                a();
            });
            break;

          case "day":
          case "month":
          case "year":
            o[b].date.forEach(function(a) {
                a();
            });
        }
    }, U = function(a, b, c) {
        if (b = Math.round(b), c = Math.round(c), 0 > c) return Promise.reject("bad duration");
        if (0 === c) return a.scrollTop = b, Promise.resolve();
        var d = Date.now(), e = d + c, f = a.scrollTop, g = b - f, h = function(a, b, c) {
            if (a >= c) return 0;
            if (c >= b) return 1;
            var d = (c - a) / (b - a);
            return d * d * (3 - 2 * d);
        };
        return new Promise(function(b, c) {
            var i = a.scrollTop, j = function() {
                if (a.scrollTop == i) {
                    var c = Date.now(), k = h(d, e, c), l = Math.round(f + g * k);
                    if (a.scrollTop = l, c >= e) return void b();
                    if (a.scrollTop === i && a.scrollTop !== l) return void b();
                    i = a.scrollTop, setTimeout(j, 0);
                }
            };
            setTimeout(j, 0);
        });
    }, V = function() {
        return m.date.toDateString();
    }, W = function() {
        return m.date.toGMTString();
    }, X = function() {
        return m.date.toISOString();
    }, Y = function() {
        return m.date.toLocaleDateString();
    }, Z = function() {
        return m.date.toLocaleString();
    }, $ = function() {
        return m.date.toLocaleTimeString();
    }, _ = function() {
        return m.date.toString();
    }, aa = function() {
        return m.date.toTimeString();
    }, ba = function() {
        return m.date.toUTCString();
    }, ca = function(a, b) {
        o.onChange[a].push(b);
    }, da = function(a, b) {
        o.beforeChange[a].push(b);
    }, ea = function(a, b) {
        o.afterChange[a].push(b);
    };
    r(a), this.init = r, this.getHours = D, this.getMinutes = F, this.getIsAm = H, this.getIsPm = I, 
    this.getTime = P, this.getDate = K, this.getMonth = M, this.getYear = O, this.getFullTime = Q, 
    this.setHours = C, this.setMinutes = E, this.setAmPm = G, this.setDate = J, this.setMonth = L, 
    this.setYear = N, this.values = m, this.toDateString = V, this.toGMTString = W, 
    this.toISOString = X, this.toLocaleDateString = Y, this.toLocaleString = Z, this.toLocaleTimeString = $, 
    this.toString = _, this.toTimeString = aa, this.toUTCString = ba, this.onChange = ca, 
    this.beforeChange = da, this.afterChange = ea;
}